#!/bin/sh
# git-track should be added to your path.
# Sets up auto-tracking of a remote branch with same base name.
# Can set up "git track" so it feels built-in:
# git config --global --add alias.track '!git-track'
#
#Usage: git-track <remote name> [branch name]

branch=$(git branch 2>/dev/null | grep ^\*)
branch=${branch/* /}


if [ -n "$2" ] ; then
    remote=$1
    tracking=$2
elif [ -n "$1" ] ; then
    remote=`expr -- "$1" : '\(.\+\)[/\.].*'`
    if [ -z "$remote" ] ; then
        remote=origin
        tracking=$1
    else
        tracking=`expr -- "$1" : '.\+[/\.]\(.\+\)'`
        [ -z "$tracking" ] && tracking=$branch
    fi
else
    APPNAME=`basename $0`
    echo "Usage:"
    echo "      $APPNAME <remote name>.<branch name>"
    echo "      $APPNAME <remote name>/<branch name>"
    echo "      $APPNAME <remote name> [branch name]"
    echo "      $APPNAME <branch name>"
    exit 0
fi


function run {
    echo "[config] $3 = $4"
    "$@"
}

run git config branch.$branch.remote $remote
if run git config branch.$branch.merge refs/heads/$tracking ; then
    echo "ok, branch $branch will track $remote/$tracking"
else
    echo "fatal, maybe there isn\'t a git repositoty"
fi    


